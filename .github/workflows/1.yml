name: Interactive Shell

on:
  workflow_dispatch:
    inputs:
      raw_file:
        description: "Raw file URL that'll be run in the shell upon connecting"
        required: true
        default: "https://raw.githubusercontent.com/c0dem0de/TUIs/refs/heads/main/app.py"

jobs:
  interactive_shell:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Dependencies and Setup Locale
        run: |
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt update
          sudo apt upgrade -y
          sudo apt-get install -y tmate curl wget neovim bash
          sudo apt-get install -y python3-urwid python3-pyfiglet
          sudo locale-gen en_US.UTF-8
          sudo update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

      - name: Modify Bash shell setup with custom variable and start tmate
        run: |
          # Get the custom URL from the workflow input
          export MY_CUSTOM_URL='${{ github.event.inputs.raw_file }}'
          echo 'The custom URL is: $MY_CUSTOM_URL'

          # Extract the filename and extension from the URL
          filename=$(basename "$MY_CUSTOM_URL")

          # Download the file using wget with the extracted filename
          wget "$MY_CUSTOM_URL" -O "$filename"
          ls -l "$filename" && pwd

          # Create a wrapper script to handle session cleanup
          cat > wrapper.sh <<EOF
          #!/bin/bash
          python3 $filename
          exit_status=\$?
          if [ \$exit_status -eq 0 ]; then
            echo "Python script exited, cleaning up tmate session..."
            # Kill the tmate session
            pkill -f tmate
          fi
          EOF
          
          chmod +x wrapper.sh

          export LC_ALL=en_US.UTF-8
          export LANG=en_US.UTF-8
          export LANGUAGE=en_US.UTF-8

          # Create tmate configuration
          mkdir -p ~/.tmate
          cat > ~/.tmate.conf <<EOF
          set -g tmate-server-host "ssh.tmate.io"
          set -g tmate-server-port 22
          set -g tmate-server-rsa-fingerprint   "SHA256:Hthk2T/M/Ivqfk1YYUn5ijC2Att3+UPzD7Rn72P5VWs"
          set -g tmate-server-ecdsa-fingerprint "SHA256:8PtXBC5Hbq3UQGuXUYZpZQtLb0t+0dPp9Zs1t6CYcis"
          set -g tmate-identity ""
          EOF

          # Start tmate with the wrapper script
          tmate -F -v -S /tmp/tmate.sock new-session -d "./wrapper.sh"
          tmate -S /tmp/tmate.sock wait tmate-ready

          # Display connection information
          TMATE_SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          echo "SSH: ${TMATE_SSH}"

          # Monitor tmate session and exit when it ends
          while tmate -S /tmp/tmate.sock has-session 2>/dev/null; do
            echo "Persistent tmate session is active..."
            echo "SSH: $(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')"
            sleep 30
          done
