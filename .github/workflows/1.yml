name: Interactive Shell

on:
  workflow_dispatch:
    inputs:
      raw_file:
        description: "Raw file URL that'll be run in the shell upon connecting"
        required: true
        default: "https://raw.githubusercontent.com/c0dem0de/TUIs/refs/heads/main/jikanApp.py"

jobs:
  interactive_shell:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Dependencies and Setup Locale
        run: |
          sudo add-apt-repository ppa:deadsnakes/ppa
          sudo apt update
          sudo apt upgrade -y
          sudo apt-get install -y tmate curl wget neovim bash
          sudo apt-get install -y python3-urwid python3-pyfiglet, python3-requests
          sudo locale-gen en_US.UTF-8
          sudo update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8

      - name: Setup and Start Interactive Session
        run: |
          # Download and prepare Python script
          export MY_CUSTOM_URL='${{ github.event.inputs.raw_file }}'
          filename=$(basename "$MY_CUSTOM_URL")
          wget "$MY_CUSTOM_URL" -O "$filename"

          # Create wrapper script
          cat > wrapper.sh <<EOF
          #!/bin/bash
          python3 $filename
          if [ \$? -eq 0 ]; then
            tmate -S /tmp/tmate.sock detach-client
          fi
          EOF
          chmod +x wrapper.sh

          # Configure tmate without status line
          mkdir -p ~/.tmate
          cat > ~/.tmate.conf <<EOF
          set -g tmate-server-host "ssh.tmate.io"
          set -g tmate-server-port 22
          set -g tmate-server-rsa-fingerprint   "SHA256:Hthk2T/M/Ivqfk1YYUn5ijC2Att3+UPzD7Rn72P5VWs"
          set -g tmate-server-ecdsa-fingerprint "SHA256:8PtXBC5Hbq3UQGuXUYZpZQtLb0t+0dPp9Zs1t6CYcis"
          set -g tmate-identity ""
          set -g status off
          set -g status-interval 0
          EOF

          # Start tmate with wrapper
          tmate -F -v -S /tmp/tmate.sock new-session -d "./wrapper.sh"
          tmate -S /tmp/tmate.sock wait tmate-ready

          # Monitor session
          while tmate -S /tmp/tmate.sock has-session 2>/dev/null; do
            echo "Session: $(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')"
            sleep 30
          done
